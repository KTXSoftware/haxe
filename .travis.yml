env:
  global:
    # make variables
    - OCAMLC=ocamlc.opt
    - OCAMLOPT=ocamlopt.opt
    # nightly builds submit
    - secure: "UoGjYvQqt66GWmeLC4Pih1iue5AufVgW8XQOd2Bx839NN/2mQQ9bD1HuONJe+taWBJ+PHInkAjYROYYaiCQUA7B1SXs3oQD7Og6arVcR7kY7XOdAQ2t8ZkxJHTnuYGWW/2gNFBESv+3H17bkXG4rzaSn2LV5PJLOxSjw0ziBUMY="
    - secure: "ugpxt+zeYiAiMYKLK96f5TLSxbQAtmDWiumdwaLHl88fIUeefxJJPIF1Xm0AHeYEJE7sD8dLE1dMbRSzOpXFfTmJoQZv19Wjv+2N5B+DaabKjGj1nZG7q3blGa3nUYzWVfFNFiIpM9c5fvW8yiUFzacZE5itEY8+lZQeGsNh+WQ="
    # SauceLabs
    - secure: SjyKefmjUEXi0IKHGGpcbLAajU0mLHONg8aA8LoY7Q9nAkSN6Aql+fzS38Boq7w1jWn+2FOpr+4jy0l6wVd/bftsF+huFfYpFJmdh8BlKmE0K71zZAral0H1c7YxkuQpPiJCIFGXqtkvev7SWTy0z31u7kuuQeEyW27boXe5cDA=
    - secure: sUvWUjCyPuWht4seNa4f2VG9DkvXkhZyLZfjJO9TUAHB2JndS16E2j/qrvKEjycyH6w8tU/B9vnjDRvvGrYXxEXcBEwsJVfkorFnRl9uwGCGIYrzjMhssEl3fMYZK7P304f+gAp5ULrDBX2gIaKeSa8lUNRtz2PsZOieE4kMdhk=
    # Bintray
    # - secure: "ETbwZaeRq8wIVZVyUk1IsNctYVuQa/U2biRkF9pQkz3MEXpaneynclVzNjm8rnm8JqfKcjUDUvQJBP1KYrJYq3tAJFhl31YUnS0FsF3sgLIcnHkhbRA24xJdIlCwHP6QUPoiyPbkec43NRwrF0071KOMD51vgUToXRtAe3o/15g="
    # - secure: "Fcrrge2f4jFYDOopig2rwkQvgJw6Ra8UK6OwTVk08wecytzVaOJK1TcB22PSvZ+h0ZLJs34T+pXHFjlNuSWm4+CwGSvnltRD1/svjS8zOqK7RzuUdzHz87yruz9PFqV63HTas6qtmgLqp8n/Q6AhtDLF39BTZPyDzEbi9qkwRuI="
    # - secure: "VBJDQNJ9uvdt0aszo7oU3txuRvjkuLmuHZGOkrd4wE/5B4sX5jzx/+dnrKcNTXJCmQ/rVLuMu9GyxqVjNHlzce678voxdQNOtNkNgpkr1qN9/A9rRnCp77hH27ErdthpWxbmcnE62hAJ83TIKSvn//5lAkx4sMCKS1NXEWQ5qec="
    # PPA configs
    - PPA="ppa:haxe/snapshots"
    - DEBFULLNAME="Haxe CI Bot"
    - DEBEMAIL="haxe-ci@onthewings.net"

sudo: required
dist: trusty
osx_image: xcode6.4
addons: &addons
  ssh_known_hosts:
    - haxe.org
    - api.haxe.org

install_linux: &install_linux
  # Install neko and haxe dependencies
  - sudo add-apt-repository ppa:haxe/ocaml -y
  - sudo apt-get update
  - sudo apt-get install -y
      ocaml
      ocaml-native-compilers
      camlp4
      pkg-config
      libgc-dev
      libssl-dev
      libpcre3-dev
      zlib1g-dev
      apache2-dev
      libmysqlclient-dev
      libsqlite3-dev
      libgtk2.0-dev
      awscli
  # Install neko
  - mkdir ~/neko
  - export NEKOPATH=~/neko
  - curl -s -L --retry 3 'http://nekovm.org/media/neko-2.1.0-linux64.tar.gz' | tar -C ~/neko -x -z --strip-components=1 -f -
  - sudo ln -s ~/neko/neko ~/neko/nekoc ~/neko/nekoml ~/neko/nekotools /usr/local/bin/
  - sudo ln -s ~/neko/libneko.* /usr/local/lib/
  - sudo ln -s ~/neko/include/* /usr/local/include/
  - sudo mkdir -p /usr/local/lib/neko/
  - sudo ln -s ~/neko/*.ndll /usr/local/lib/neko/
  - sudo ln -s ~/neko/nekoml.std /usr/local/lib/neko/
  - sudo ldconfig
  # Setup JDK
  - jdk_switcher use oraclejdk7
  - java -version
  # Build haxe
  - make package_src -s
  - make -s STATICLINK=1
  - make package_bin -s
  - ls -l out
  - ldd -v ./haxe
  - ldd -v ./haxelib
  - export PATH="$PATH:$TRAVIS_BUILD_DIR"
  - export HAXE_STD_PATH="$TRAVIS_BUILD_DIR/std"

install_osx: &install_osx
  # Install haxe dependencies
  - brew uninstall --force brew-cask # https://github.com/caskroom/homebrew-cask/pull/15381
  - travis_retry brew update
  - travis_retry brew install opam zlib pcre;
  - opam init --comp 4.02.3 -y
  - eval `opam config env`
  - opam install camlp4 -y
  # Install neko
  - mkdir ~/neko
  - export NEKOPATH=~/neko
  - curl -s -L --retry 3 'http://nekovm.org/media/neko-2.1.0-osx64.tar.gz' | tar -C ~/neko -x -z --strip-components=1 -f -
  - sudo ln -s ~/neko/neko ~/neko/nekoc ~/neko/nekoml ~/neko/nekotools /usr/local/bin/
  - sudo ln -s ~/neko/libneko.* /usr/local/lib/
  - sudo ln -s ~/neko/include/* /usr/local/include/
  - sudo mkdir -p /usr/local/lib/neko/
  - sudo ln -s ~/neko/*.ndll /usr/local/lib/neko/
  - sudo ln -s ~/neko/nekoml.std /usr/local/lib/neko/
  # Build haxe
  - make package_src -s
  - make -s STATICLINK=1 "LIB_PARAMS=/usr/local/opt/zlib/lib/libz.a /usr/local/lib/libpcre.a"
  - make package_bin -s
  - make package_installer_mac -s
  - ls -l out
  - otool -L ./haxe
  - otool -L ./haxelib
  - export PATH="$PATH:$TRAVIS_BUILD_DIR"
  - export HAXE_STD_PATH="$TRAVIS_BUILD_DIR/std"
  - travis_retry brew install awscli

matrix:
  include:
    #########
    # linux #
    #########
    - os: linux
      env:
        - TEST=macro,neko,js,php,flash9,java,cs,python,hl,lua
        - DEPLOY_NIGHTLIES=1
        - SAUCE=1
        # haxeci_decrypt (Deploy source package to ppa:haxe/snapshots.)
        - secure: "Mw3p6bDZuqVQ6u7GrwLQfje5hhIOA4+mdqqLXYHP79UKdhgqb91Dn6IbG9vQ1VXVe64W4YZbQAMBMMRX5kEPDl6JvTVGSBhg00Mi69oO5qrCMcBI6f9FntG72YaVvLf+PA7co+vKrnJzaP2M9pe4SH9Ztbhy0YNxULp7NQ8FLsM="
        # deploy_key_decrypt (Deploy doc to api.haxe.org.)
        - secure: "A75uYqU0Xz6plIgSewEs0QQWe472dCMb9kf3j7Hx0DS7dApXgx8++189sw9Sv0wam5KPtbcIM292MucjGCb5zocVj9xCUVgajhEA0QpTuDMBjk/cg3ClWCGjfybaCl2E5LLdUs7Zy4b4oNWtVikOWLWJ4sC1kaarR9p6kv8yYZg="
      addons:
        <<: *addons
        sauce_connect: true
      before_install:
        - sudo dpkg --add-architecture i386
        - sudo apt-get update -y || true
        - travis_retry sudo apt-get install -y
            libcurl3:i386
            libglib2.0-0:i386
            libx11-6:i386
            libxext6:i386
            libxt6:i386
            libxcursor1:i386
            libnss3:i386
            libgtk2.0-0:i386
        - "export DISPLAY=:99.0"
        - "sh -e /etc/init.d/xvfb start"
        - "export AUDIODEV=null"
      install: *install_linux

    - os: linux
      env:
        - TEST=cpp
      before_install:
        - sudo apt-get update -y || true
        - travis_retry sudo apt-get install -y
            gcc-multilib
            g++-multilib
      install: *install_linux

    - os: linux
      env:
        - TEST=php7
      before_install:
        - phpenv global "7.0"
        # - sudo apt-get install php7-cli php7-mysql php7-sqlite -y || (sudo add-apt-repository ppa:ondrej/php -y && sudo apt-get update -y && sudo apt-get install  php7.0-cli php7.0-mysql php7.0-sqlite -y)
        - php -v || true
      install: *install_linux

    #######
    # osx #
    #######
    - os: osx
      env:
        - TEST=macro,neko,js,php,flash9,as3,java,cs,python,hl,lua
        - DEPLOY_NIGHTLIES=1
      install: *install_osx

    - os: osx
      env:
        - TEST=cpp
      install: *install_osx

script:
  - eval `ssh-agent -s` # for deployment to haxe.org
  - pushd tests
  -   mkdir ~/haxelib && haxelib setup ~/haxelib
  -   haxelib install record-macros
  -   haxe -version
  -   haxe RunCi.hxml
  -   neko RunCi.n
  - popd

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/95a5fa471c27beee8e7c
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false
